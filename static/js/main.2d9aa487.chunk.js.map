{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","pages/NotFoundPage/NotFoundPage.tsx","pages/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/NoPeopleMessage/NoPeopleMessage.tsx","components/PeopleLoadingError/PeopleLoadingError.tsx","components/PersonLink/PersonLink.tsx","components/PersonData/PersonData.tsx","components/PeopleTable/PeopleTable.tsx","helpers.ts","pages/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","link","text","className","isActive","classNames","to","Navbar","role","NotFoundPage","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","NoPeopleMessage","PeopleLoadingError","PersonLink","name","sex","slug","PersonData","person","useParams","selectedSlug","born","died","fatherName","motherName","mother","father","getParentLayout","parentName","parent","PeopleTable","people","map","assignParents","personWithParents","find","PeoplePage","useState","setPeople","arePeopleLoading","setArePeopleLoading","hasLoadingError","setHasLoadingError","loadPeople","peopleFromServer","peopleWithParents","useEffect","length","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2d9aa487.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  link: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ link, text }) => (\n  <NavLink\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n    to={link}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink link=\"/\" text=\"Home\" />\n        <PageNavLink link=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export const NoPeopleMessage = () => (\n  <p data-cy=\"noPeopleMessage\">\n    There are no people on the server\n  </p>\n);\n","export const PeopleLoadingError = () => (\n  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n    Something went wrong\n  </p>\n);\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = Pick<Person, 'name' | 'sex' | 'slug'>;\n\nexport const PersonLink: FC<Props> = ({ name, sex, slug }) => {\n  return (\n    <Link\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n      to={`../${slug}`}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonData: FC<Props> = ({ person }) => {\n  const { selectedSlug = '' } = useParams();\n\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  const getParentLayout = (\n    parentName: string | null,\n    parent?: Person,\n  ) => (\n    parent ? (\n      <PersonLink\n        name={parent.name}\n        sex={parent.sex}\n        slug={parent.slug}\n      />\n    ) : (\n      parentName || '-'\n    )\n  );\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': selectedSlug === slug,\n      })}\n    >\n      <td>\n        <PersonLink\n          name={name}\n          sex={sex}\n          slug={slug}\n        />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {getParentLayout(motherName, mother)}\n      </td>\n\n      <td>\n        {getParentLayout(fatherName, father)}\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { Person } from '../../types';\nimport { PersonData } from '../PersonData';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonData\n            key={person.name}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types';\n\nexport const assignParents = (people: Person[]) => {\n  const peopleWithParents: Person[] = people.map(person => {\n    const personWithParents = { ...person };\n    const mother = people.find(parent => parent.name === person.motherName);\n\n    if (mother) {\n      personWithParents.mother = mother;\n    }\n\n    const father = people.find(parent => parent.name === person.fatherName);\n\n    if (father) {\n      personWithParents.father = father;\n    }\n\n    return personWithParents;\n  });\n\n  return peopleWithParents;\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../../components/Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { NoPeopleMessage } from '../../components/NoPeopleMessage';\nimport { PeopleLoadingError } from '../../components/PeopleLoadingError';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { assignParents } from '../../helpers';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [arePeopleLoading, setArePeopleLoading] = useState(true);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n\n  const loadPeople = async () => {\n    try {\n      const peopleFromServer = await getPeople();\n      const peopleWithParents = assignParents(peopleFromServer);\n\n      setPeople(peopleWithParents);\n    } catch {\n      setHasLoadingError(true);\n    } finally {\n      setArePeopleLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {arePeopleLoading && <Loader />}\n\n          {hasLoadingError && <PeopleLoadingError />}\n\n          {people && (\n            people.length ? (\n              <PeopleTable\n                people={people}\n              />\n            ) : (\n              <NoPeopleMessage />\n            )\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":selectedSlug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}